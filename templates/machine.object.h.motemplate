// DO NOT EDIT. This file is machine-generated and constantly overwritten.
// Make changes to <$managedObjectMappingClassNameWithSuffix$>.h instead.
// baseObjectClass confirm to NSCopying and NSCoding default
<$if hasCustomSuperentityObject$><$if hasSuperentity$>#import "<$customSuperentityObject$>.h"
<$else$><$if hasCustomBaseObjectCaseImport$>#import <$baseObjectClassImport$><$else$>#import "<$customSuperentityObject$>.h"<$endif$><$endif$><$endif$>
<$if !objectClassOnly$>#import "<$managedObjectClassName$>.h"<$endif$>

<$if !objectClassOnly$>
//property
#define <$managedObjectMappingClassNameWithSuffix$>Attributes <$managedObjectClassName$>Attributes
#define <$managedObjectMappingClassNameWithSuffix$>Relationships <$managedObjectClassName$>Relationships
<$else$>
<$if noninheritedAttributes.@count > 0$>
extern const struct <$managedObjectMappingClassNameWithSuffix$>Attributes {<$foreach Attribute noninheritedAttributes do$>
	<$if TemplateVar.arc$>__unsafe_unretained<$endif$> NSString *<$Attribute.name$>;<$endforeach do$>
} <$managedObjectMappingClassNameWithSuffix$>Attributes;
<$endif$>

<$if noninheritedRelationships.@count > 0$>
extern const struct <$managedObjectMappingClassNameWithSuffix$>Relationships {<$foreach Relationship noninheritedRelationships do$>
	<$if TemplateVar.arc$>__unsafe_unretained<$endif$> NSString *<$Relationship.name$>;<$endforeach do$>
} <$managedObjectMappingClassNameWithSuffix$>Relationships;
<$endif$>
<$endif$>

//property mapping according to MagicalRecord
<$foreach Attribute noninheritedAttributes do$><$if Attribute.objectAttributeMapKeys.@count > 0$>
extern const struct <$managedObjectMappingClassNameWithSuffix$><$Attribute.name.initialCapitalString$>MapKeys {<$foreach Key Attribute.objectAttributeMapKeys do$>
	<$if TemplateVar.arc$>__unsafe_unretained<$endif$> NSString *<$Key.mapKeyName$>;<$endforeach do$>
} <$managedObjectMappingClassNameWithSuffix$><$Attribute.name.initialCapitalString$>MapKeys;<$endif$>
<$endforeach do$>

<$foreach Relationship noninheritedRelationships do$><$if Relationship.objectRelationshipMapKeys.@count > 0$>
extern const struct <$managedObjectMappingClassNameWithSuffix$><$Relationship.name.initialCapitalString$>MapKeys {<$foreach Key Relationship.objectRelationshipMapKeys do$>
	<$if TemplateVar.arc$>__unsafe_unretained<$endif$> NSString *<$Key.mapKeyName$>;<$endforeach do$>
} <$managedObjectMappingClassNameWithSuffix$><$Relationship.name.initialCapitalString$>MapKeys;<$endif$>
<$endforeach do$>
	
@interface _<$managedObjectMappingClassNameWithSuffix$> : <$customSuperentityObject$> {}

//super class need to have this method.
- (instancetype)initWithAttributes:(NSDictionary *)attributes;
<$if !objectClassOnly$>
- (<$managedObjectClassName$> *)create<$managedObjectClassName.initialCapitalString$>InContext:(NSManagedObjectContext *)context;
- (instancetype)initWith<$managedObjectClassName.initialCapitalString$>:(<$managedObjectClassName$> *)mo;
<$endif$>
- (void)updateWithAttributes:(NSDictionary *)attributes;   //use the same mapping

<$if TemplateVar.arc$>
@property (nonatomic, strong, readonly) NSDictionary *mapping;<$else$>
@property (nonatomic, retain, readonly) NSDictionary *mapping;
<$endif$>

//loop Attribute
<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasDefinedAttributeType$><$if TemplateVar.arc$>
@property (nonatomic, <$if Attribute.isObjectAttributeStringType$>copy<$else$>strong<$endif$>) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$else$>
@property (nonatomic, <$if Attribute.isObjectAttributeStringType$>copy<$else$>retain<$endif$>) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$><$endif$>
<$if Attribute.hasScalarAttributeType$>
@property (atomic) <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;
- (<$Attribute.scalarAttributeType$>)<$Attribute.name$>Value;
- (void)set<$Attribute.name.initialCapitalString$>Value:(<$Attribute.scalarAttributeType$>)value_;<$endif$>
<$endforeach do$>

/* loop Relationship
 * if one-many, use customized accessors to access immutable collection
 */
<$foreach Relationship noninheritedRelationships do$><$if Relationship.isToMany$><$if TemplateVar.arc$>
@property (nonatomic, strong) <$Relationship.immutableUnorderedCollectionClassName$> *<$Relationship.name$>;<$else$>
@property (nonatomic, retain) <$Relationship.immutableUnorderedCollectionClassName$> *<$Relationship.name$>;<$endif$>

- (<$Relationship.mutableUnorderedCollectionClassName$>*)<$Relationship.name$>Array;
- (void)add<$Relationship.name.initialCapitalString$>:(<$Relationship.immutableUnorderedCollectionClassName$>*)value_;
- (void)remove<$Relationship.name.initialCapitalString$>:(<$Relationship.immutableUnorderedCollectionClassName$>*)value_;
- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectMappingClassNameWithSuffix$>*)value_;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectMappingClassNameWithSuffix$>*)value_;<$else$><$if TemplateVar.arc$>
@property (nonatomic, strong) <$Relationship.destinationEntity.managedObjectMappingClassNameWithSuffix$> *<$Relationship.name$>;<$else$>
@property (nonatomic, retain) <$Relationship.destinationEntity.managedObjectMappingClassNameWithSuffix$> *<$Relationship.name$>;<$endif$><$endif$>
<$endforeach do$>

@end

